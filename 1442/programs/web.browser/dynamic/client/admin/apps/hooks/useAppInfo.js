function module(t,e,a){let n,i,r,s,l,p,c;a.link("@babel/runtime/helpers/objectSpread2",{default(t){n=t}},0),a.export({useAppInfo:()=>f}),a.link("react",{useState(t){i=t},useEffect(t){r=t},useContext(t){s=t}},0),a.link("../../../../app/apps/client/orchestrator",{Apps(t){l=t}},1),a.link("../AppProvider",{AppDataContext(t){p=t}},2),a.link("../helpers",{handleAPIError(t){c=t}},3);const d=async(t,e)=>{try{const{bundledIn:a}=await l.getLatestAppFromMarketplace(t,e);return a&&await Promise.all(a.map((t,e)=>l.getAppsOnBundle(t.bundleId).then(n=>{t.apps=n.slice(0,4),a[e]=t}))),a}catch(a){c(a)}},o=async(t,e)=>{if(!e)return{};try{const e=await l.getAppSettings(t);return e}catch(a){c(a)}},u=async(t,e)=>{if(!e)return{};try{return await l.getAppApis(t)}catch(a){c(a)}},f=t=>{const{data:e,dataCache:a}=s(p),[c,f]=i({});return r(()=>{(async()=>{if(!e.length||!t)return;let a=e.find(e=>{let{id:a}=e;return a===t});if(!a){const e=await l.getApp(t);a=n({},e,{installed:!0,marketplace:!1})}if(!1===a.marketplace){const[t,e]=await Promise.all([o(a.id,a.installed),u(a.id,a.installed)]);return f(n({},a,{settings:t,apis:e}))}const[i,r,s]=await Promise.all([d(a.id,a.version),o(a.id,a.installed),u(a.id,a.installed)]);f(n({},a,{bundledIn:i,settings:r,apis:s}))})()},[t,e,a]),c}}

