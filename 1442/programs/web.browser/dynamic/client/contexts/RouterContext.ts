function module(e,r,u){let t,o,n,s;u.export({RouterContext:()=>a,useRoute:()=>i,useRoutePath:()=>c,useRouteUrl:()=>R,useRouteParameter:()=>l,useQueryStringParameter:()=>y,useCurrentRoute:()=>d}),u.link("react",{createContext(e){t=e},useContext(e){o=e},useMemo(e){n=e}},0),u.link("use-subscription",{useSubscription(e){s=e}},1);const a=t({queryRoutePath:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),queryRouteUrl:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),pushRoute:()=>void 0,replaceRoute:()=>void 0,queryRouteParameter:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),queryQueryStringParameter:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),queryCurrentRoute:()=>({getCurrentValue:()=>[void 0,{},{},void 0],subscribe:()=>()=>void 0})}),i=e=>{const{queryRoutePath:r,queryRouteUrl:u,pushRoute:t,replaceRoute:s}=o(a);return n(()=>({getPath:(u,t)=>r(e,u,t).getCurrentValue(),getUrl:(r,t)=>u(e,r,t).getCurrentValue(),push:(r,u)=>t(e,r,u),replace:(r,u)=>s(e,r,u)}),[r,u,e,t,s])},c=(e,r,u)=>{const{queryRoutePath:t}=o(a);return s(n(()=>t(e,r,u),[t,e,r,u]))},R=(e,r,u)=>{const{queryRouteUrl:t}=o(a);return s(n(()=>t(e,r,u),[t,e,r,u]))},l=e=>{const{queryRouteParameter:r}=o(a);return s(n(()=>r(e),[r,e]))},y=e=>{const{queryQueryStringParameter:r}=o(a);return s(n(()=>r(e),[r,e]))},d=()=>{const{queryCurrentRoute:e}=o(a);return s(n(()=>e(),[e]))}}

